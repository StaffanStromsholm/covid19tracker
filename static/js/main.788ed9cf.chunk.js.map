{"version":3,"sources":["App.js","index.js"],"names":["App","useState","searchQuery","setSearchQuery","url","setUrl","location","setLocation","totalDeaths","setTotalDeaths","newDeaths","setNewDeaths","totalCases","setTotalCases","newCases","setNewCases","matches","setMatches","matchesBolean","setMatchesBolean","useEffect","fetch","then","response","json","data","length","Deaths","Confirmed","catch","error","console","log","handleChange","e","a","target","value","searchText","res","countries","filter","country","regex","RegExp","Country","match","handleCountryClick","innerHTML","className","onSubmit","preventDefault","class","id","autoComplete","onChange","type","placeholder","style","position","map","i","width","onClick","toUpperCase","ReactDOM","render","document","getElementById"],"mappings":"+MA4GeA,G,MAzGH,WAAM,MAEsBC,mBAAS,WAF/B,mBAETC,EAFS,KAEIC,EAFJ,OAGMF,mBAAS,4CAAD,OAA6CC,IAH3D,mBAGTE,EAHS,KAGJC,EAHI,OAIgBJ,mBAAS,WAJzB,mBAITK,EAJS,KAICC,EAJD,OAKsBN,qBALtB,mBAKTO,EALS,KAKIC,EALJ,OAMkBR,qBANlB,mBAMTS,EANS,KAMEC,EANF,OAOoBV,qBAPpB,mBAOTW,EAPS,KAOGC,EAPH,OAQgBZ,qBARhB,mBAQTa,EARS,KAQCC,EARD,OAScd,mBAAS,IATvB,mBASTe,EATS,KASAC,EATA,OAU0BhB,oBAAS,GAVnC,mBAUTiB,EAVS,KAUMC,EAVN,KA2BhBC,qBAAU,WAdRC,MAAMjB,GACHkB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJhB,EAAegB,EAAKA,EAAKC,OAAS,GAAGC,QACrChB,EAAac,EAAKA,EAAKC,OAAS,GAAGC,OAASF,EAAKA,EAAKC,OAAS,GAAGC,QAClEd,EAAcY,EAAKA,EAAKC,OAAS,GAAGE,WACpCb,EAAYU,EAAKA,EAAKC,OAAS,GAAGE,UAAYH,EAAKA,EAAKC,OAAS,GAAGE,cAGrEC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAO7B,CAAC1B,IAEJ,IAOM6B,EAAY,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,6DACnBhB,GAAiB,GACjBhB,EAAe+B,EAAEE,OAAOC,OACpBC,EAAaJ,EAAEE,OAAOC,MAHP,SAIDhB,MAAM,wCAJL,cAIbkB,EAJa,gBAKKA,EAAIf,OALT,OAKbgB,EALa,OAOfxB,EAAUwB,EAAUC,QAAO,SAAAC,GAC7B,IAAMC,EAAQ,IAAIC,OAAJ,WAAeN,GAAc,MAC3C,OAAOI,EAAQG,QAAQC,MAAMH,MAGL,IAAtBL,EAAWZ,SACbV,EAAU,IAEZC,EAAWD,GAfQ,4CAAH,sDAkBZ+B,EAAqB,SAAAb,GACzB/B,EAAe+B,EAAEE,OAAOY,WACxBzC,EAAY2B,EAAEE,OAAOY,WACrB3C,EAAO,4CAAD,OAA6C6B,EAAEE,OAAOY,YAC5D7B,GAAiB,IAInB,OACE,yBAAK8B,UAAU,OACb,gDAEA,0BAAMC,SArCW,SAAChB,GACpBf,GAAiB,GACjBZ,EAAYL,GACZG,EAAO,4CAAD,OAA6CH,IACnDgC,EAAEiB,mBAkCE,yBAAKC,MAAM,cACT,2BAAOC,GAAG,eAAeC,aAAa,MAAMC,SAAUtB,EAAcuB,KAAK,OAAOJ,MAAM,eAAeK,YAAY,qBAIrH,yBAAKC,MAAO,CAAEC,SAAU,aACtB,yBAAKP,MAAM,QACT,wBAAIA,MAAM,+BACRlC,EACDF,EAAQ4C,KAAI,SAACd,EAAOe,GAAR,OACd,wBAAIH,MAAO,CAACI,MAAO,SAAUC,QAAShB,EAAoBK,MAAM,mBAAmBN,EAAMD,YAE1F,MAQF,6BACA,4BAAI,gCAASvC,EAAS0D,gBACtB,6BAEA,yCACA,2BAAIlD,GACJ,2CACA,2BAAIF,GACJ,0CACA,2BAAIF,GACJ,4CACA,2BAAIF,MCnGVyD,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.788ed9cf.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css'\n\nconst App = () => {\n  //state\n  const [searchQuery, setSearchQuery] = useState('Finland')\n  const [url, setUrl] = useState(`https://api.covid19api.com/total/country/${searchQuery}`)\n  const [location, setLocation] = useState('Finland')\n  const [totalDeaths, setTotalDeaths] = useState();\n  const [newDeaths, setNewDeaths] = useState();\n  const [totalCases, setTotalCases] = useState();\n  const [newCases, setNewCases] = useState();\n  const [matches, setMatches] = useState([]);\n  const [matchesBolean, setMatchesBolean] = useState(false);\n\n  const fetchCoronaStatus = () => {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        setTotalDeaths(data[data.length - 1].Deaths);\n        setNewDeaths(data[data.length - 1].Deaths - data[data.length - 2].Deaths)\n        setTotalCases(data[data.length - 1].Confirmed)\n        setNewCases(data[data.length - 1].Confirmed - data[data.length - 2].Confirmed)\n\n      })\n      .catch(error => console.log(error))\n  }\n\n  // \n\n  useEffect(() => {\n    fetchCoronaStatus();\n  }, [url])\n\n  const handleSubmit = (e) => {\n    setMatchesBolean(false);\n    setLocation(searchQuery);\n    setUrl(`https://api.covid19api.com/total/country/${searchQuery}`)\n    e.preventDefault();\n  }\n\n  const handleChange = async e => {\n    setMatchesBolean(true);\n    setSearchQuery(e.target.value);\n    let searchText = e.target.value\n    const res = await fetch('https://api.covid19api.com/countries')\n    const countries = await res.json()\n    //get matches to current text input\n    let matches = countries.filter(country => {\n      const regex = new RegExp(`^${searchText}`, \"gi\")\n      return country.Country.match(regex);\n\n    })\n    if (searchText.length === 0) {\n      matches = [];\n    }\n    setMatches(matches)\n  }\n\n  const handleCountryClick = e => {\n    setSearchQuery(e.target.innerHTML)\n    setLocation(e.target.innerHTML)\n    setUrl(`https://api.covid19api.com/total/country/${e.target.innerHTML}`)\n    setMatchesBolean(false);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>COVID-19 TRACKER</h1>\n\n      <form onSubmit={handleSubmit}>\n        <div class=\"form-group\">\n          <input id=\"autocomplete\" autoComplete=\"off\" onChange={handleChange} type=\"text\" class=\"form-control\" placeholder=\"Search Country\" />\n        </div>\n      </form>\n\n      <div style={{ position: \"absolute\" }}>\n        <div class=\"card\">\n          <ul class=\"list-group list-group-flush\">\n          { matchesBolean ?\n           matches.map((match, i) => (\n         <li style={{width: \"22rem\"}} onClick={handleCountryClick} class=\"list-group-item\">{match.Country}</li>\n        ))\n      : \"\"}\n            \n            \n          </ul>\n        </div>\n        \n      </div>\n\n      <br />\n      <h2><strong>{location.toUpperCase()}</strong></h2>\n      <br />\n      \n      <h3>New Cases</h3>\n      <p>{newCases}</p>\n      <h3>Total Cases</h3>\n      <p>{totalCases}</p>\n      <h3>New Deaths</h3>\n      <p>{newDeaths}</p>\n      <h3>Total Deaths</h3>\n      <p>{totalDeaths}</p>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}